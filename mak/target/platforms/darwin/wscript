# set MacOS specific options

import os
import Utils

def set_options(opt):
	try:
		sdks = os.listdir(os.path.join('/Developer', 'SDKs'))
		opt.add_option( '--darwin-sdk',
						action='store',
						default=sdks[-1],
						dest='darwin_sdk',
						help='Use MacOS sdk')
	except OSError:
		pass

def configure(conf):
	import Options
	conf.env['PLATFORM'] = ['darwin', 'posix', 'pc']
	conf.env.append_unique('CFLAGS', ['-isysroot', os.path.join('/Developer', 'SDKs', Options.options.darwin_sdk, 'usr', 'include')])
	conf.env.append_unique('CXXFLAGS', ['-isysroot', os.path.join('/Developer', 'SDKs', Options.options.darwin_sdk)])
	conf.env.append_unique('LINKFLAGS', ['-isysroot', os.path.join('/Developer', 'SDKs', Options.options.darwin_sdk)])
	conf.env['library_PATTERN'] = '%s.a'
	conf.env['shlib_PATTERN']   = '%s.so'
	conf.env['program_PATTERN'] = '%s'
	
	conf.env.append_unique('CCDEFINES', ['POSIX', '_POSIX', '_POSIX_', '__POSIX__'])
	conf.env.append_unique('CXXDEFINES', ['POSIX', '_POSIX', '_POSIX_', '__POSIX__'])
	conf.env['PREFIX']			= os.path.abspath(conf.env['_VARIANT_'])
	conf.env['DEPLOY']			= { 'prefix':	'',
									'bin':		'bin',
									'etc':		'etc',
									'runbin':	'bin',
									'api':		'include',
									'lib':		'lib',
									'data':		os.path.join('share', getattr(Utils.g_module, 'APPNAME', 'noname')),
									'plugin':	os.path.join('data', 'plugins') }
									

def build(bld):
	pass
