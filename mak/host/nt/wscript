# set win32 specific options
# detect tools : msvc, mingw


import os
from waflib.Logs import info,warn,pprint
import mak.tools.cross_gcc
import waflib.Tools.msvc

os.environ['PATH'] = os.path.abspath("mak\\win32\\bin\\;")+os.environ['PATH']

# gets a list of all the MSVC complete suites installed
def get_available_msvc(conf):
	conf.env['MSVC_TARGETS'] = []
	allversions = conf.get_msvc_versions()
	for (compiler, targets) in allversions:
		compiler,version = compiler.split()
		for (target, (tname, paths)) in targets:
			if tname in conf.env['ARCHITECTURES']:
				conf.env['MSVC_TARGETS'].append((compiler, version, target, 'win32', tname))


def options(opt):
	pprint('NORMAL', 'Host system is Win32')
	opt.add_option( '--no-msvc',
					action='store_false',
					dest="msvc",
					default=True,
					help='Disable MSVC toolchains')
	pass

def configure(conf):
	conf.load('flex bison data', tooldir=['mak/tools'])
	conf.env['HOST'] = 'win32'
	conf.env['BUILD_VARIANTS'] = []
	conf.get_available_gcc()
	from waflib import Options
	if Options.options.msvc:
		get_available_msvc(conf)
