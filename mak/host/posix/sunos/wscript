# set SunOS/Solaris specific options
# detect tools : gcc, suncc

import os
import Utils
from Logs import warn

def get_available_suncc(conf):
	newenv = conf.env.copy()
	conf.set_env_name('temp',newenv)
	conf.setenv('temp')
	conf.check_tool('cross_suncc', tooldir='mak/tools')
	name = 'suncc-sunos-'+conf.env['SUNCC_TARGET']+'-'+conf.env['SUNCC_VERSION']
	Utils.pprint('NORMAL', '=> configured for tool %s' % name)
	conf.set_env_name(name, newenv)
	newenv.set_variant(name)
	conf.sub_config(os.path.join('..', '..', '..', 'target', 'platforms', 'sunos'))
	conf.sub_config(os.path.join('..', '..', '..', 'target', 'archs', conf.env['SUNCC_TARGET']))
	del conf.all_envs['temp']
	conf.setenv('default')
	conf.env['BUILD_VARIANTS'].append(name)

# gets a list of the GCC toolchains installed
def get_available_gcc(conf):
	toolchaindirs=set([])
	conf.env['GCC_TARGETS'] = []
	for dir in os.environ['PATH'].split(':'):
		toolchaindirs.add(os.path.normpath(os.path.join(dir, '..')))
	for toolchaindir in toolchaindirs:
		if os.path.isdir(os.path.join(toolchaindir,'lib','gcc')):
			for target in os.listdir(os.path.join(toolchaindir, 'lib', 'gcc')):
				print toolchaindir
				if target in ['.svn', '.cvs']:
					continue
				for version in os.listdir(os.path.join(toolchaindir, 'lib', 'gcc', target)):
					if version in ['.svn', '.cvs']:
						continue
					if os.path.islink(os.path.join(toolchaindir, 'lib', 'gcc', target, version)):
						continue
					conf.env['GCC_TARGETS'].append((version, toolchaindir, target))


def options(opt):
	Utils.pprint('NORMAL', 'Host system is SunOS/Solaris/OpenSolaris.org')

def configure(conf):
	conf.check_tool('bison flex data', tooldir='mak/tools')
	conf.env['HOST'] = 'sunos'
	conf.env['BUILD_VARIANTS'] = []
	#get_available_suncc(conf)
	get_available_gcc(conf)
