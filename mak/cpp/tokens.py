import cpp.yacc as yacc


class keyword(yacc.Token):			pass
class PUBLISHED(keyword):			"%token"
class STRUCT(keyword):				"%token"
class CLASS(keyword):				"%token"
class ENUM(keyword):				"%token"
class NAMESPACE(keyword):			"%token"
class UNION(keyword):				"%token"
class USING(keyword):				"%token"
class NEW(keyword):					"%token"
class DELETE(keyword):				"%token"
class PUBLIC(keyword):				"%token"
class PROTECTED(keyword):			"%token"
class PRIVATE(keyword):				"%token"
class FRIEND(keyword):				"%token"
class SIGNED(keyword):				"%token"
class UNSIGNED(keyword):			"%token"
class SHORT(keyword):				"%token"
class CHAR(keyword):				"%token"
class LONG(keyword):				"%token"
class INT(keyword):					"%token"
class FLOAT(keyword):				"%token"
class DOUBLE(keyword):				"%token"
class EXPLICIT(keyword):			"%token"
class INLINE(keyword):				"%token"
class EXTERN(keyword):				"%token"
class STATIC(keyword):				"%token"
class CONST(keyword):				"%token"
class VOLATILE(keyword):			"%token"
class VIRTUAL(keyword):				"%token"
class OVERRIDE(keyword):			"%token"
class TEMPLATE(keyword):			"%token"
class TYPENAME(keyword):			"%token"
class OPERATOR(keyword):			"%token"
class TYPEDEF(keyword):				"%token"
class THROW(keyword):				"%token"
class BE_TAG(keyword):				"%token"

class ID(yacc.Token):				"%token"
class CHARCONST(yacc.Token):		"%token"
class WCHAR(yacc.Token):			"%token"
class STRING(yacc.Token):			"%token"
class WSTRING(yacc.Token):			"%token"
class FLOATING(yacc.Token):			"%token"
class DECIMAL(yacc.Token):			"%token"
class OCTAL(yacc.Token):			"%token"
class HEX(yacc.Token):				"%token"
class PLUS(yacc.Token):				"%token"
class MINUS(yacc.Token):			"%token"
class TIMES(yacc.Token):			"%token"
class DIVIDE(yacc.Token):			"%token"
class MOD(yacc.Token):				"%token"
class OR(yacc.Token):				"%token"
class AND(yacc.Token):				"%token"
class NOT(yacc.Token):				"%token"
class XOR(yacc.Token):				"%token"
class LSHIFT(yacc.Token):			"%token"
class RSHIFT(yacc.Token):			"%token"
class LOR(yacc.Token):				"%token"
class LAND(yacc.Token):				"%token"
class LNOT(yacc.Token):				"%token"
class LT(yacc.Token):				"%token"
class LE(yacc.Token):				"%token"
class GT(yacc.Token):				"%token"
class GE(yacc.Token):				"%token"
class EQ(yacc.Token):				"%token"
class NE(yacc.Token):				"%token"
class SCOPE(yacc.Token):			"%token"
class EQUAL(yacc.Token):			"%token"
class TIMESEQUAL(yacc.Token):		"%token"
class DIVEQUAL(yacc.Token):			"%token"
class MODEQUAL(yacc.Token):			"%token"
class PLUSEQUAL(yacc.Token):		"%token"
class MINUSEQUAL(yacc.Token):		"%token"
class LSHIFTEQUAL(yacc.Token):		"%token"
class RSHIFTEQUAL(yacc.Token):		"%token"
class ANDEQUAL(yacc.Token):			"%token"
class XOREQUAL(yacc.Token):			"%token"
class OREQUAL(yacc.Token):			"%token"
class PLUSPLUS(yacc.Token):			"%token"
class MINUSMINUS(yacc.Token):		"%token"
class ARROW(yacc.Token):			"%token"
class CONDOP(yacc.Token):			"%token"
class LPAREN(yacc.Token):			"%token"
class RPAREN(yacc.Token):			"%token"
class LBRACKET(yacc.Token):			"%token"
class RBRACKET(yacc.Token):			"%token"
class LBRACE(yacc.Token):			"%token"
class RBRACE(yacc.Token):			"%token"
class COMMA(yacc.Token):			"%token"
class PERIOD(yacc.Token):			"%token"
class SEMI(yacc.Token):				"%token"
class COLON(yacc.Token):			"%token"
class ELLIPSIS(yacc.Token):			"%token"
class DOXY_BEGIN(yacc.Token):		"%token"
class DOXY_BEGIN_LEFT(yacc.Token):	"%token"
class DOXY_END(yacc.Token):			"%token"
class DOXY_NEWLINE(yacc.Token):		"%token"
class DOXY_WORD(yacc.Token):		"%token"
class DOXY_LIST(yacc.Token):		"%token"


